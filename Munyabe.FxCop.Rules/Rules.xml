<?xml version="1.0" encoding="utf-8" ?>
<Rules FriendlyName="Munyabe FxCop Rules">
  <Rule Category="Munyabe.Design" CheckId="MU1000" TypeName="DoMakeExceptionsSerializable">
    <Name>Do make exceptions serializable</Name>
    <Description>Do make exceptions serializable. An exception must be serializable to work correctly across application domain and remoting boundaries.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url>http://msdn.microsoft.com/en-us/library/ms229064(v=vs.100).aspx</Url>
    <Resolution>Marked the [{0}] which inherits the Exception with the Serializable attribute.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Maintainability" CheckId="MU1500" TypeName="MarkPrivateFieldsAsReadOnly">
    <Name>Mark private fields as readonly</Name>
    <Description>Mark a private field which is not set after initialization as readonly.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Marke the [{0}#{1}] as readonly.</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1800" TypeName="AvoidUnnecessaryFieldInitialization">
    <Name>Avoid unnecessary field initialization</Name>
    <Description>It is not necessary to initialize fields, because it will be done automatically by the runtime.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Remove this initialization.</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1801" TypeName="AvoidUnnecessaryEnumerableCount">
    <Name>Avoid unnecessary Enumerable.Count</Name>
    <Description>Avoid Enumerable.Count in Array or ICollection`1 instance.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution Name="Array">Use Length proprety.</Resolution>
    <Resolution Name="ICollection">Use Count proprety.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1802" TypeName="UseEnumerableAny">
    <Name>Use Enumerable.Any</Name>
    <Description>If you compare Enumerable.Count to zero, an unnecessary enumeration may be executed.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Use Enumerable.Any.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1803" TypeName="AvoidRepetitiveFirstEnumeration">
    <Name>Avoid repetitive first enumeration</Name>
    <Description>The multiple first enumerations are done on the same value. Enumerations are expensive so reducing them.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Use Enumerable.FirstOrDefault and check for null.</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1804" TypeName="AvoidRepetitiveAccessDictionaryKey">
    <Name>Avoid repetitive access Dictionary key</Name>
    <Description>The multiple accesses for same key are done on the same dictionary.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Use IDictionary.TryGetValue.</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1805" TypeName="AvoidEnumGetHashCode">
    <Name>Avoid calling Enum.GetHashCode</Name>
    <Description>Avoid calling Enum.GetHashCode, since this method requires a cost.</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Call GetHashCode after casting to Int32.</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
</Rules>