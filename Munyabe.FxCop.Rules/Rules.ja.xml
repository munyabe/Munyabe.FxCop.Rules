<?xml version="1.0" encoding="utf-8" ?>
<Rules FriendlyName="Munyabe FxCop Rules">
  <Rule Category="Munyabe.Design" CheckId="MU1000" TypeName="DoMakeExceptionsSerializable">
    <Name>例外をシリアル化可能にします</Name>
    <Description>例外をシリアル化可能にします。アプリケーションドメインやリモート処理境界を越えて適切に例外を動作させるには、シリアル化可能にする必要があります。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url>http://msdn.microsoft.com/ja-jp/library/ms229064.aspx</Url>
    <Resolution>Exception を継承する型 '{0}' に Serializable 属性を付与してください。</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Maintainability" CheckId="MU1500" TypeName="MarkPrivateFieldsAsReadOnly">
    <Name>private フィールドを readonly にします</Name>
    <Description>初期化後に値を設定しない private フィールドは readonly にしてください。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>フィールド '{0}#{1}' を readonly にしてください。</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1800" TypeName="AvoidUnnecessaryFieldInitialization">
    <Name>フィールドを不要に初期化しないでください</Name>
    <Description>フィールドのデフォルト値はランタイムによって自動的に設定されるため、初期化する必要はありません。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>デフォルト値で初期化しないでください。</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1801" TypeName="AvoidUnnecessaryEnumerableCount">
    <Name>不要な Enumerable.Count を呼び出さないでください</Name>
    <Description>配列や ICollection では Enumerable.Count を使用しないでください。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution Name="Array">Length プロパティを使用してください。</Resolution>
    <Resolution Name="ICollection">Count プロパティを使用してください。</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1802" TypeName="UseEnumerableAny">
    <Name>Enumerable.Any を使用してください</Name>
    <Description>Enumerable.Count の結果を0と比較すると、不要な列挙が実行される可能性があります。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Enumerable.Any を使用してください。</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1803" TypeName="AvoidRepetitiveFirstEnumeration">
    <Name>最初の要素を繰り返し列挙しないでください</Name>
    <Description>同じ値に対して最初の要素を繰り返し列挙しています。列挙はコストが高いので、減らしてください。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Enumerable.FirstOrDefault を使用し、null かどうかチェックしてください。</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1804" TypeName="AvoidRepetitiveAccessDictionaryKey">
    <Name>Dictionary の同一のキーに繰り返しアクセスしないでください</Name>
    <Description>同じ Dictionary に対して同じキーで繰り返しアクセスしています。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>IDictionary.TryGetValue を使用してください。</Resolution>
    <MessageLevel Certainty="75">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
  <Rule Category="Munyabe.Performance" CheckId="MU1805" TypeName="AvoidEnumGetHashCode">
    <Name>Enum.GetHashCode を使用しないでください</Name>
    <Description>Enum.GetHashCode はコストが高いため、使用しないでください。</Description>
    <Owner>munyabe</Owner>
    <Email></Email>
    <Url></Url>
    <Resolution>Int32 にキャストしてから GetHashCode を呼び出してください。</Resolution>
    <MessageLevel Certainty="95">Warning</MessageLevel>
    <FixCategories>NonBreaking</FixCategories>
  </Rule>
</Rules>